#hub.docker.com #repositório oficial do docker


docker run ubuntu #run the oficial ubuntu image, o comando run cria um novo container

docker run -it ubuntu #run the oficial ubuntu image e continue running, deixa o terminal do contâiner disponível

docker run -d name_of_image #Roda em modo detached, em background, ou seja, não fica exposto na CLI

docker run -d -p 80:80 nginx #Expondo porta 80, utilizando a porta 80 do meu computador. Juntando comandos -d com -p

docker run -v /path/que será salvo os arquivos #Criando volume anônimo

docker run -v nome_do_volume:/path/que será salvo os arquivos #Criando volume nomeado

docker run -v nome_do_volume:/path/queserásalvoosarquivos:ro #Criando volume apenas leitura, read only

docker run /dir/data:/data  #Criando volume bind mount, /dir/data é o diretório do nosso computador, será o volume do container

docker ps #Vê quais imagens estão rodando, see what images are running

docker container ls #Funciona igual o docker ps

docker container ls -a #Funciona igual o docker ps -a

docker ps -a #Mostra um histórico de todos os containers que ja rodaram na máquina, show a historic of all runned containers

docker stop name #Stop a container by name

docker stop id #id do container

docker start id ou nome #Inicia um container pelo id ou pelo nome

docker start -i id #Roda container com iteratividade

docker run -d -p 80:80 --name name_of_container nginx #Criando/creating a container and giving a name, nomeando

docker logs name_of_container #Ajuda debugar erros, ver os últimos eventos, error

docker rm name_of_container/id #Removing, reomver um container, se o container estiver rodando vc pode usar o -f para forçar parar.

docker rm name_of_container/id -f #Removing, reomver um container, se o container estiver rodando vc pode usar o -f para forçar parar.

docker image ls #lista todas as imagens que tenho instalada

docker pull nome_da_imagem #Download, baixa a imagem que fica pronta para uso

docker tag id novo_nome:nova_tag #Renaming, renomeando uma imagem

docker build -t nome:tag local

docker rmi nome_da_imagem #Remover uma imagem, posso adicionar o -f para forçar

docker rmi -f nome_da_imagem #Remover uma imagem, posso adicionar o -f para forçar

docker system prune #Remove dados não utilzados, limpa, clear, remove imagens, containers, redes

docker run --rm id ou nome #Remove automaticamente o container depois q ele é parado, bom para ambiente de testes

docker cp nome_container:/path/relativo/file.py ./path/que_quero_copiar #Copia arquivo de um diretório para um container ou vice versa, copy file

docker top nome_do_container #verifica as execuções do container

docker inspect nome_do_container #mostra como o container foi configurado, info, set up

docker stats #Vê o processamento dos containers

docker volume ls  #vê todos os volumes do meu ambiente

docker volume create nome_do_volume #Criando volumes manualmente

docker volume inspect nome_do_volume #Inspeciona o volume

docker volume rm nome_do_volume #Removendo um volume

docker volume prune #Remove volumes em massa

docker network ls #Lista as redes que ue possuo, lists

docker network create nome_da_rede #Cria uma rede, create, por padrão o tipo da rede é bridge
#######################

Executando uma imagem

docker build diretorio_da_imagem

docker run nome_imagem

#######################

#######################
Criando uma imagem, creating Dockerfile

from #imagem base

workdir #diretório da aplicação
 
expose #porta da aplicação

copy #quais arquivos precisam ser copiados

########################

#######################

Enviando uma imagem para o hub

docker login #Q vc criou no site
username
senha

docker push nome_da_imagem

docker pull nome_da_imagem #Puxa a imagem, download, baixa

docker logout
#######################
