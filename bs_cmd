comandos e ações em sequência

pip install django

pip install django-crispy-forms

pip install pillow

django-admin startproject bsaas_1 .

python manage.py startapp loja

python manage.py startapp pedido

python manage.py startapp perfil

python manage.py check

python manage.py migrate

python manage.py create superuser

pedro
pedrocanizela@gmail.com
123

python manage.py runserver

entrar no admin: depois de clicar no link para entrar na pagina do servidor, ao final da url adicionar /admin

logar para testar

pip install pylint

Em settings.py podemos mudar a linguagem caso quisermos, e arrumar o fuso horário para 'America/Sao_Paulo'

ainda em settings.py, abaixo de STATIC_URL adicionar:
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATICFILES_DIRS = [
    os.path.join('templates/static')
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
from django.contrib.messages import constants
embaixo daqui copiar o conteúdo do arquivo messages zipado
abaixo daqui, colar o conteúdo de sessions, que está abaixo
# Sessão em dias: 60s * 60m * 24h * 1d
SESSION_COOKIE_AGE = 60 * 60 * 24 * 7

# Salvar a cada requisição
SESSION_SAVE_EVERY_REQUEST = False

# Serializer - Padrão JSON
# SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'

# Para sessions em arquivos ao invés da base de dados
# SESSION_ENGINE = "django.contrib.sessions.backends.file"
# SESSION_FILE_PATH = '/home/luizotavio/Desktop/temp'

Seguir o passo a passo da documentação do debug toolbar para adicionar o debug toolbar:
https://django-debug-toolbar.readthedocs.io/en/latest/installation.html

dentro da pasta loja, no arquivo urls, após o path, importar o include
dentro da pasta loja, no arquivo urls: from django.conf import settings
dentro da pasta loja, no arquivo urls: from django.conf.urls.static import static
dentro da pasta loja, no arquivo urls: á frente de url_patterns, depois de fechar os colchetes, inserir: 
+ static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

dentro do arquivo settings.py, em templates, em dirs, add dentro dos colchetes:
os.path.join(BASE_DIR, 'templates')

dentro da pasta raíz do projeto, no caso bitsaas_version1, criar uma pasta com nome 'templates' e dentro dela criar uma pasta chamada 'static'

python manage.py startapp produto

dentro da pasta rais, bitsaas, criar o seguinte path para salvar as imagens
'produto_imagens/ano/mes'

Dentro da app Produto, dentro de models.py, criar um modelo de produto:
class Produto(models.Model):
    nome = models.CharField(max_length=255)
    descricao_curta = models.TextField(max_length=255)
    descricao_longa = models.TextField()
    imagem = models.ImageField(
        upload_to='produto_imagens/ano/mes', blank=True, null=True)
    slug = models.SlugField(unique=True)
    preco = models.FloatField()
    tipo = models.CharField(
        default='V',
        max_lenght=100,
        choices=(
            ('V', 'Variação'),
            ('S', 'Simples'),
        )
    )

dentro de settings.py adicionar a app produto dentro de installed_apps

python manage.py makemigrations #para criar o banco de dados
