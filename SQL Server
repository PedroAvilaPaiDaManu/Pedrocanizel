
___________________________________________________________________
Select##############################################################

SELECT * FROM CITY; #City=table

SELECT CITY, STATE FROM STATION; #Select more than one columns, select many columns

SELECT DISTINCT CITY FROM STATION WHERE (ID % 2) = 0; #City=column, station=table, pair number, número par

select distinct city from station where left(city,1) in ('a','i','u','e','o');

###################################################################


___________________________________________________________________
Where##############################################################


SELECT * FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 100000; #City = table, countrycode = column, population = column

SELECT NAME FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 120000; #Name= column, city=table, countrycode=columns

SELECT DISTINCT CITY FROM STATION WHERE (ID % 2) = 0; #City=column, station=table, pair number, número par

select distinct city from station where left(city,1) in ('a','i','u','e','o'); #city=column, station=table, left(city, 1)=primeira letra da esquerda, first letter

SELECT DISTINCT CITY FROM STATION WHERE RIGHT(CITY,1) IN ('a', 'e', 'i', 'o', 'u'); #city=column, station=table, right(city, 1)=última letra da direita, last letter

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY, 1) IN ('a', 'e', 'i', 'o', 'u') AND RIGHT(CITY, 1) IN ('a', 'e', 'i', 'o', 'u');

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY, 1) NOT IN ('a', 'e', 'i', 'o','u'); #Não contenha

SELECT DISTINCT CITY FROM STATION WHERE RIGHT(CITY, 1) NOT IN ('a', 'e', 'i', 'o', 'u'); #Não contenha

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u') OR RIGHT(CITY, 1) NOT IN ('a', 'e', 'i', 'o', 'u');  #Não contenha

SELECT Name FROM Employee WHERE salary > 2000 AND months < 10 ORDER BY employee_id; 

SELECT MAX(salary*months),COUNT(employee_id) 
FROM employee 
WHERE (salary*months)=(SELECT MAX(salary*months) FROM employee);

SELECT * FROM Customers #where like
where City like 'a%';


SELECT * FROM Customers
where City like '%a';

SELECT * FROM Customers
where City like '%a%';

SELECT * FROM Customers
WHERE City LIKE 'a%b';

SELECT * FROM Customers
where not City like 'a%';

SELECT * FROM Customers
WHERE City LIKE '_a%'; #Segunda letra, second letter


SELECT * FROM Customers
WHERE City LIKE '[acs]%'; #First letter contains, primeira letra contem ou a ou c ou s

SELECT * FROM Customers
WHERE City LIKE '[a-f]%'; #primeira letra contém qq coisa entre a e f, first letter contains range of letters

SELECT * FROM Customers
WHERE City LIKE '[!acf]%'; #primeira letra não contém  a, c, f, first letter not contains a, c, f

SELECT * FROM Customers
where Country in('Norway', 'France'); #Where in

SELECT * FROM Customers
where Country not in ('Norway', 'France'); #Where not in

SELECT * FROM Products
WHERE Price between 10 and 20; #Where between

SELECT * FROM Products
WHERE Price not between 10 and 20;

SELECT * FROM Products
WHERE ProductName between 'Geitost' and 'Pavlova'; #Where between alphabetcally, between alfabético
##################################################################


___________________________________________________________________
Count##############################################################

SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION #city=column, station=table

SELECT MAX(salary*months),COUNT(employee_id) 
FROM employee 
WHERE (salary*months)=(SELECT MAX(salary*months) FROM employee);


SELECT CONCAT(Name,'(',substring(occupation,1,1),')') 
FROM OCCUPATIONS
ORDER BY  NAME asc;
SELECT CONCAT('There are a total of',' ',COUNT(occupation),' ',LOWER(occupation), 's.') 
FROM OCCUPATIONS
GROUP BY occupation
ORDER BY COUNT(OCCUPATION) asc,OCCUPATION asc;


###################################################################


___________________________________________________________________
Order by############################################################

SELECT Name FROM Students WHERE Marks > 75 ORDER BY RIGHT(Name, 3), ID; #name=column, Marks=column, ordenado pelas últimas letras, last letters

SELECT Name FROM Employee ORDER BY Name;

SELECT Name FROM Employee WHERE salary > 2000 AND months < 10 ORDER BY employee_id;

SELECT s.hacker_id, h.name
FROM hackers h
JOIN submissions s USING (hacker_id)
JOIN challenges c USING (challenge_id)
JOIN difficulty d USING (difficulty_level)
WHERE s.score = d.score
GROUP BY s.hacker_id, h.name
HAVING COUNT(s.hacker_id) > 1
ORDER BY COUNT(s.hacker_id) DESC, s.hacker_id ASC

SELECT W.id, WP.age, W.coins_needed, W.power
FROM Wands AS W
JOIN Wands_Property AS WP
USING(code)
WHERE WP.is_evil = 0 AND 
W.coins_needed = (SELECT MIN(coins_needed) 
                    FROM Wands AS W2
                    JOIN Wands_Property AS WP2 
                    USING(code)
                    WHERE W2.power = W.power AND WP2.age = WP.age) 
ORDER BY W.power DESC, WP.age DESC;

SELECT CONCAT(Name,'(',substring(occupation,1,1),')') 
FROM OCCUPATIONS
ORDER BY  NAME asc;
SELECT CONCAT('There are a total of',' ',COUNT(occupation),' ',LOWER(occupation), 's.') 
FROM OCCUPATIONS
GROUP BY occupation
ORDER BY COUNT(OCCUPATION) asc,OCCUPATION asc;

SELECT count(CustomerID),
Country
FROM Customers
group by Country
ORDER BY count(CustomerID) Desc;
___________________________________________________________________
Len################################################################

SELECT TOP(1) CITY,LEN(CITY) FROM STATION ORDER BY LEN(CITY), CITY; #city=column, station=table, len=número de caracteres, number of characters 
SELECT TOP(1) CITY,LEN(CITY) FROM STATION ORDER BY LEN(CITY) DESC, CITY ;



###################################################################



___________________________________________________________________
Left, right#########################################################

select distinct city from station where left(city,1) in ('a','i','u','e','o'); #city=column, station=table, left(city, 1)=primeira letra da esquerda, first letter

SELECT DISTINCT CITY FROM STATION WHERE RIGHT(CITY,1) IN ('a', 'e', 'i', 'o', 'u'); #city=column, station=table, right(city, 1)=última letra da direita, last letter

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY, 1) IN ('a', 'e', 'i', 'o', 'u') AND RIGHT(CITY, 1) IN ('a', 'e', 'i', 'o', 'u'); 

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY, 1) NOT IN ('a', 'e', 'i', 'o','u'); #Não contenha

SELECT DISTINCT CITY FROM STATION WHERE RIGHT(CITY, 1) NOT IN ('a', 'e', 'i', 'o', 'u'); #Não contenha

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u') OR RIGHT(CITY, 1) NOT IN ('a', 'e', 'i', 'o', 'u'); #Não contenha

SELECT Name FROM Students WHERE Marks > 75 ORDER BY RIGHT(Name, 3), ID;

SELECT Name FROM Students WHERE Marks > 75 ORDER BY RIGHT(Name, 3), ID; #name=column, Marks=column, ordenado pelas últimas letras, last letters


###################################################################



___________________________________________________________________
case, when, then###################################################

SELECT CASE 
       WHEN (A = B AND B = C AND C = A) THEN 'Equilateral'
       WHEN (A + B >  C AND B + C >  A AND C + A > B) AND (A = B OR B = C OR C = A)     
       THEN 'Isosceles'
       WHEN (A + B >  C AND B + C >  A AND C + A > B) THEN 'Scalene' 
       ELSE  'Not A Triangle' 
       END AS TY
FROM TRIANGLES    

Select case when Marks > 70 then Name else 'NULL' end,
case when Marks = 100 then 10 else Marks/10 +1 end as Grade, Marks From Students Order by Grade desc, Name


###################################################################

___________________________________________________________________
joins##############################################################

SELECT SUM(CITY.POPULATION) #city=table, population=column,
FROM CITY
RIGHT JOIN COUNTRY
ON CITY.CountryCode = COUNTRY.Code
WHERE CONTINENT = 'Asia'


SELECT CITY.Name #city=table, name=column
FROM CITY
INNER JOIN COUNTRY
ON CITY.CountryCode = COUNTRY.Code
WHERE COUNTRY.CONTINENT = 'Africa'

SELECT COUNTRY.CONTINENT, ROUND(AVG(CITY.POPULATION), 0, 1)
FROM country
INNER JOIN city
ON CITY.CountryCode = COUNTRY.Code
GROUP BY COUNTRY.CONTINENT


SELECT s.hacker_id, h.name
FROM hackers h
JOIN submissions s USING (hacker_id)
JOIN challenges c USING (challenge_id)
JOIN difficulty d USING (difficulty_level)
WHERE s.score = d.score
GROUP BY s.hacker_id, h.name
HAVING COUNT(s.hacker_id) > 1
ORDER BY COUNT(s.hacker_id) DESC, s.hacker_id ASC

SELECT W.id, WP.age, W.coins_needed, W.power
FROM Wands AS W
JOIN Wands_Property AS WP
USING(code)
WHERE WP.is_evil = 0 AND 
W.coins_needed = (SELECT MIN(coins_needed) 
                    FROM Wands AS W2
                    JOIN Wands_Property AS WP2 
                    USING(code)
                    WHERE W2.power = W.power AND WP2.age = WP.age) 
ORDER BY W.power DESC, WP.age DESC;

SELECT *
FROM Orders
LEFT JOIN Customers
on orders.CustomerID=Customers.CustomerID;

SELECT *
FROM Orders
inner join Customers
ON Orders.CustomerID=Customers.CustomerID;


SELECT *
FROM Orders
right join Customers
ON Orders.CustomerID=Customers.CustomerID;
###################################################################


___________________________________________________________________
group by###########################################################

SELECT COUNTRY.CONTINENT, ROUND(AVG(CITY.POPULATION), 0, 1)
FROM country
INNER JOIN city
ON CITY.CountryCode = COUNTRY.Code
GROUP BY COUNTRY.CONTINENT


SELECT s.hacker_id, h.name
FROM hackers h
JOIN submissions s USING (hacker_id)
JOIN challenges c USING (challenge_id)
JOIN difficulty d USING (difficulty_level)
WHERE s.score = d.score
GROUP BY s.hacker_id, h.name
HAVING COUNT(s.hacker_id) > 1
ORDER BY COUNT(s.hacker_id) DESC, s.hacker_id ASC


SELECT W.id, WP.age, W.coins_needed, W.power
FROM Wands AS W
JOIN Wands_Property AS WP
USING(code)
WHERE WP.is_evil = 0 AND 
W.coins_needed = (SELECT MIN(coins_needed) 
                    FROM Wands AS W2
                    JOIN Wands_Property AS WP2 
                    USING(code)
                    WHERE W2.power = W.power AND WP2.age = WP.age) 
ORDER BY W.power DESC, WP.age DESC;

SELECT CONCAT(Name,'(',substring(occupation,1,1),')') 
FROM OCCUPATIONS
ORDER BY  NAME asc;
SELECT CONCAT('There are a total of',' ',COUNT(occupation),' ',LOWER(occupation), 's.') 
FROM OCCUPATIONS
GROUP BY occupation
ORDER BY COUNT(OCCUPATION) asc,OCCUPATION asc;


SELECT 
count(CustomerID),
Country
FROM Customers
group by Country;

SELECT count(CustomerID),
Country
FROM Customers
group by Country
ORDER BY count(CustomerID) Desc;
###################################################################


___________________________________________________________________
ceil, avg###########################################################

SELECT CEIL(AVG(SALARY)-AVG(REPLACE(SALARY,"0",""))) FROM EMPLOYEES ; #Diferença arredondada

select cast(ceiling(avg(cast(salary as float)) 
                      - avg(cast(replace(salary, 0, '') as float))) as int)
from EMPLOYEES ;

###################################################################


SELECT MAX(salary*months),COUNT(employee_id) 
FROM employee 
WHERE (salary*months)=(SELECT MAX(salary*months) FROM employee);

___________________________________________________________________
SUM, MAX, min###########################################################

select cast(sum(LAT_N) as decimal(8, 2)), 
cast(sum(LONG_W) as decimal(8, 2)) 
from station;

 select cast(sum(LAT_N)as decimal(10,4))
 from station
 where LAT_N BETWEEN 38.7800 and  137.2345;

SELECT CAST(MAX(LAT_N) AS DECIMAL(10,4))
FROM STATION
WHERE LAT_N < 137.2345


SELECT CAST(SQRT( SQUARE(MAX(LAT_N)-MIN(LAT_N))+ SQUARE(MAX(LONG_W)-MIN(LONG_W))) AS DECIMAL (15,4))
FROM STATION
###################################################################

___________________________________________________________________
cast###########################################################


select cast(sum(LAT_N) as decimal(8, 2)), #2 DECIMAL PLATES
cast(sum(LONG_W) as decimal(8, 2)) 
from station;


 select cast(sum(LAT_N)as decimal(10,4)) #4 DECIMAL PLATES
 from station
 where LAT_N BETWEEN 38.7800 and  137.2345;

SELECT CAST(MAX(LAT_N) AS DECIMAL(10,4)) #4 DECIMAL PLATES
FROM STATION
WHERE LAT_N < 137.2345

SELECT CAST(LONG_W AS DECIMAL(10,4)) # DECIMAL PLATES
FROM STATION
WHERE LAT_N = (SELECT MAX(LAT_N) FROM STATION WHERE LAT_N < 137.2345)


SELECT CAST(SQRT( SQUARE(MAX(LAT_N)-MIN(LAT_N))+ SQUARE(MAX(LONG_W)-MIN(LONG_W))) AS DECIMAL (15,4))
FROM STATION

###################################################################


___________________________________________________________________
SUBQUERY###########################################################

SELECT CAST(LONG_W AS DECIMAL(10,4))
FROM STATION
WHERE LAT_N = (SELECT MAX(LAT_N) FROM STATION WHERE LAT_N < 137.2345) #Subquery

###################################################################

___________________________________________________________________
square, sqrt###########################################################

square = quadrado do número
sqrt = raíz quadrada

SELECT CAST(SQRT( SQUARE(MAX(LAT_N)-MIN(LAT_N))+ SQUARE(MAX(LONG_W)-MIN(LONG_W))) AS DECIMAL (15,4))
FROM STATION

###################################################################

___________________________________________________________________
concat###########################################################

SELECT CONCAT(Name,'(',substring(occupation,1,1),')') 
FROM OCCUPATIONS
ORDER BY  NAME asc;
SELECT CONCAT('There are a total of',' ',COUNT(occupation),' ',LOWER(occupation), 's.') 
FROM OCCUPATIONS
GROUP BY occupation
ORDER BY COUNT(OCCUPATION) asc,OCCUPATION asc;


###################################################################


___________________________________________________________________
update###########################################################

update Customers
set City = 'Oslo'
where Country = 'Norway';


update Customers
set City = 'Oslo',
Country = 'Norway'
WHERE CustomerID = 32;


###################################################################

___________________________________________________________________
delete###########################################################

delete from Customers #Never forget o where
where Country = 'Norway';
 
 
delete from Customers; #Delete all


drop database testDB; #delete database, drop satabase, deletar banco


drop table Persons; deletar tabela, delete table


truncate table Persons; #Delete data, all the data
 ###################################################################
 
 
___________________________________________________________________
create########################################################### 
 
create database testDB;


create table Persons #Criar tabela
 (
  PersonID int,
  LastName varchar(255),
  FirstName varchar(255),
  Address varchar(255),
  City varchar(255) 
);

 ###################################################################
 
 
 ___________________________________________________________________
alter ###########################################################
 
alter table Persons #add column, adicionar coluna
add Birthday DATE;

 ###################################################################
