
___________________________________________________________________
Select##############################################################

SELECT * FROM CITY; #City=table

SELECT CITY, STATE FROM STATION; #Select more than one columns, select many columns

SELECT DISTINCT CITY FROM STATION WHERE (ID % 2) = 0; #City=column, station=table, pair number, número par

select distinct city from station where left(city,1) in ('a','i','u','e','o');

###################################################################


___________________________________________________________________
Where##############################################################


SELECT * FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 100000; #City = table, countrycode = column, population = column

SELECT NAME FROM CITY WHERE COUNTRYCODE = 'USA' AND POPULATION > 120000; #Name= column, city=table, countrycode=columns

SELECT DISTINCT CITY FROM STATION WHERE (ID % 2) = 0; #City=column, station=table, pair number, número par

select distinct city from station where left(city,1) in ('a','i','u','e','o'); #city=column, station=table, left(city, 1)=primeira letra da esquerda, first letter

SELECT DISTINCT CITY FROM STATION WHERE RIGHT(CITY,1) IN ('a', 'e', 'i', 'o', 'u'); #city=column, station=table, right(city, 1)=última letra da direita, last letter

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY, 1) IN ('a', 'e', 'i', 'o', 'u') AND RIGHT(CITY, 1) IN ('a', 'e', 'i', 'o', 'u');

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY, 1) NOT IN ('a', 'e', 'i', 'o','u'); #Não contenha

SELECT DISTINCT CITY FROM STATION WHERE RIGHT(CITY, 1) NOT IN ('a', 'e', 'i', 'o', 'u'); #Não contenha

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u') OR RIGHT(CITY, 1) NOT IN ('a', 'e', 'i', 'o', 'u');  #Não contenha

SELECT Name FROM Employee WHERE salary > 2000 AND months < 10 ORDER BY employee_id; 


###################################################################


___________________________________________________________________
Count##############################################################

SELECT COUNT(CITY) - COUNT(DISTINCT CITY) FROM STATION #city=column, station=table


###################################################################


___________________________________________________________________
Order by############################################################

SELECT Name FROM Students WHERE Marks > 75 ORDER BY RIGHT(Name, 3), ID; #name=column, Marks=column, ordenado pelas últimas letras, last letters

SELECT Name FROM Employee ORDER BY Name;

SELECT Name FROM Employee WHERE salary > 2000 AND months < 10 ORDER BY employee_id;
___________________________________________________________________
Len################################################################

SELECT TOP(1) CITY,LEN(CITY) FROM STATION ORDER BY LEN(CITY), CITY; #city=column, station=table, len=número de caracteres, number of characters 
SELECT TOP(1) CITY,LEN(CITY) FROM STATION ORDER BY LEN(CITY) DESC, CITY ;



###################################################################



___________________________________________________________________
Left, right#########################################################

select distinct city from station where left(city,1) in ('a','i','u','e','o'); #city=column, station=table, left(city, 1)=primeira letra da esquerda, first letter

SELECT DISTINCT CITY FROM STATION WHERE RIGHT(CITY,1) IN ('a', 'e', 'i', 'o', 'u'); #city=column, station=table, right(city, 1)=última letra da direita, last letter

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY, 1) IN ('a', 'e', 'i', 'o', 'u') AND RIGHT(CITY, 1) IN ('a', 'e', 'i', 'o', 'u'); 

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY, 1) NOT IN ('a', 'e', 'i', 'o','u'); #Não contenha

SELECT DISTINCT CITY FROM STATION WHERE RIGHT(CITY, 1) NOT IN ('a', 'e', 'i', 'o', 'u'); #Não contenha

SELECT DISTINCT CITY FROM STATION WHERE LEFT(CITY,1) NOT IN ('a', 'e', 'i', 'o', 'u') OR RIGHT(CITY, 1) NOT IN ('a', 'e', 'i', 'o', 'u'); #Não contenha

SELECT Name FROM Students WHERE Marks > 75 ORDER BY RIGHT(Name, 3), ID;

SELECT Name FROM Students WHERE Marks > 75 ORDER BY RIGHT(Name, 3), ID; #name=column, Marks=column, ordenado pelas últimas letras, last letters


###################################################################



___________________________________________________________________
case, when, then###################################################

SELECT CASE 
       WHEN (A = B AND B = C AND C = A) THEN 'Equilateral'
       WHEN (A + B >  C AND B + C >  A AND C + A > B) AND (A = B OR B = C OR C = A)     
       THEN 'Isosceles'
       WHEN (A + B >  C AND B + C >  A AND C + A > B) THEN 'Scalene' 
       ELSE  'Not A Triangle' 
       END AS TY
FROM TRIANGLES    


###################################################################

___________________________________________________________________
joins##############################################################

SELECT SUM(CITY.POPULATION) #city=table, population=column,
FROM CITY
RIGHT JOIN COUNTRY
ON CITY.CountryCode = COUNTRY.Code
WHERE CONTINENT = 'Asia'


SELECT CITY.Name #city=table, name=column
FROM CITY
INNER JOIN COUNTRY
ON CITY.CountryCode = COUNTRY.Code
WHERE COUNTRY.CONTINENT = 'Africa'

SELECT COUNTRY.CONTINENT, ROUND(AVG(CITY.POPULATION), 0, 1)
FROM country
INNER JOIN city
ON CITY.CountryCode = COUNTRY.Code
GROUP BY COUNTRY.CONTINENT

###################################################################


___________________________________________________________________
gtoup by###########################################################

SELECT COUNTRY.CONTINENT, ROUND(AVG(CITY.POPULATION), 0, 1)
FROM country
INNER JOIN city
ON CITY.CountryCode = COUNTRY.Code
GROUP BY COUNTRY.CONTINENT

###################################################################

